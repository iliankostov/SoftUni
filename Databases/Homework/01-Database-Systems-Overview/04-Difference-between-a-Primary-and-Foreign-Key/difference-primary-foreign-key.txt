Primary key is a key in a relational database that is unique for each record. A relational database must always have one and only one primary key. Primary keys typically appear as columns in relational database tables. The main purpose of a primary key is to implement a relationship between two tables in a relational database. More specifically, the primary key is the "target" which a foreign key can reference. One reason for declaring a primary key, even if no other table references it, comes from what we could call a side benefit - the primary key gets an index.
Foreign key is a field (or collection of fields) in one table that uniquely identifies a row of another table. In simpler words, the foreign key is defined in a second table, but it usually refers to the primary key in the first table. The purpose of the foreign key is to ensure referential integrity of the data. This not only makes data management easier, but it also makes for a flexible database that can respond to changing requirements.
Differences between a primary and foreign key are:
- primary key can't accept null values, but foreign key can accept multiple null value.
- we can have only one primary key in a table, but we can have more than one foreign key.
- primary key is clustered index and data in the database table is physically organized in the sequence of clustered index as opposed to foreign key do not automatically create an index, clustered or non-clustered, you can manually create an index on foreign key.